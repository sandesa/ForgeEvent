@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<EditForm method="post" Model="SearchRequest" OnValidSubmit="Search" FormName="search" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />

    @if (CategoriesDisplay != null)
    {
        <InputSelect class="form-select" @bind-Value="SearchRequest.Category">
            <option value="">Select an option</option>
            @foreach (var category in Enum.GetValues(typeof(Category)))
            {
                <option value="@((int)category)">@category</option>
            }
        </InputSelect>
    }
    <div class="mb-3">
                <label for="name" class="form-label">Name:</label>
                <InputText id="name" @bind-Value="SearchRequest.SearchString" class="form-control" />
            </div>
    <button type="submit" class="btn btn-primary">Search</button>
</EditForm>

@code {
    private IEnumerable<string> CategoriesDisplay;

    [SupplyParameterFromForm]
    private SearchRequest SearchRequest { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        CategoriesDisplay = await HttpClient.GetFromJsonAsync<IEnumerable<string>>("https://localhost:7206/api/Events/categories");
    }

    public async Task Search()
    {
        NavigationManager.NavigateTo($"/search/{SearchRequest.Category}/{SearchRequest.SearchString}");
    }
}
