@page "/profilepage/{id}"
@inject HttpClient HttpClient
@inject ILocalStorageService LocalStorage
@rendermode InteractiveServer

<h3>ProfilePage</h3>

@if (profile == null)
{
    <p>Loading...</p>
}
else
{
    <dl class="row">
        <dt class="col-sm-2">Name</dt>
        <dd class="col-sm-10">@profile.FirstName @profile.LastName</dd>
        <dt class="col-sm-2">Email</dt>
        <dd class="col-sm-10">@profile.Email</dd>
        <dt class="col-sm-2">Phonenumber</dt>
        <dd class="col-sm-10">@profile.PhoneNumber</dd>
    </dl>

    <h3>Favorited Events</h3>
    @if (favoriteEvents == null)
    {
        <p>Loading favorite events...</p>
    }
    else if (!favoriteEvents.Any())
    {
        <p>No favorite events found.</p>
    }
    else
    {
        <ul>
            @foreach (var eventItem in favoriteEvents)
            {
                <li>
                    <strong>@eventItem.Name</strong><br />
                    Date: @eventItem.Date.ToString("dddd, dd MMMM yyyy")<br />
                    Price: @eventItem.Price $
                </li>
            }
        </ul>
    }
}

@code {
    private User profile;
    private List<Event> favoriteEvents;
    [Parameter]
    public string Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (int.TryParse(Id, out int userId))
        {
            profile = await HttpClient.GetFromJsonAsync<User>($"https://localhost:7206/api/Users/{userId}");
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadFavoriteEvents();
            StateHasChanged();
        }
    }

    private async Task LoadFavoriteEvents()
    {
        var favoriteEventIds = await LocalStorage.GetItemAsync<List<int>>("favoriteEvents") ?? new List<int>();

        favoriteEvents = new List<Event>();

        foreach (var eventId in favoriteEventIds)
        {
            var eventItem = await HttpClient.GetFromJsonAsync<Event>($"https://localhost:7206/api/Events/{eventId}");
            if (eventItem != null)
            {
                favoriteEvents.Add(eventItem);
            }
        }
    }
}
