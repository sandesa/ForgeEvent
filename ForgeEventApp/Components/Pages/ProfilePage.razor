@page "/profilepage/{id}"
@inject HttpClient httpClient
@inject IBookingService IBookingService
<h3>ProfilePage</h3>
@if(profile == null)
{
    <p>Loading...</p>
}
else
{
    <dl class="row">
        <dt class="col-sm-2">Name</dt>
        <dd class="col-sm-10">@profile.FirstName @profile.LastName</dd>
        <dt class="col-sm-2">Email</dt>
        <dd class="col-sm-10">@profile.Email</dd>
        <dt class="col-sm-2">Phonenumber</dt>
        <dd class="col-sm-10">@profile.PhoneNumber</dd>
    </dl>

    @if(bookings is null || !bookings.Any())
    {
        <p>You have no booked event</p>
    }
    else
    {
        <p>Your bookings:</p>

        @foreach(var booking in bookings)
        {
            <div class="d-flex justify-content-center">
                <div class="col-3 p-1" style="width: 30%">
                    <div class="card h-100">
                        <a href="@($"bookingdetails/{booking.Id}")" style="text-decoration: none; color: inherit;">
                            <img src="/images/EventImages/@booking.Event.ImageUrl" class="img-fluid card-img-top" alt="@booking.Event.Name" />
                            <div class="card-body">
                                <h5 class="card-title">@booking.Event.Name</h5>
                                <p class="card-text">@booking.Event.Date.ToString("dddd, dd MMMM yyyy")</p>
                                <p class="card-text"><b>Purchased at:</b></p>
                                <p class="card-text">@booking.CreatedAt.ToString("dd MMMM yyyy")</p>
                            </div>
                        </a>
                    </div>
                </div>
            </div>
        }
    }
}
 
@code {
    private User? profile;
    private IEnumerable<Booking>? bookings;
    [Parameter]
    public string? Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (int.TryParse(Id, out int userId))
        {    
            profile = await httpClient.GetFromJsonAsync<User>($"https://localhost:7206/api/Users/{userId}");
            bookings = await IBookingService.GetAllBookingsByUserIdAsync(userId);

        }

    }
}
