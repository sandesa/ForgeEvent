@page "/profilepage/{UserId:int}/edit"
@inject IUserRepository UserRepository
@inject NavigationManager Navigation
@using ForgeEventApp.Components.Layout
@layout ProfilePageLayout
@rendermode InteractiveServer

<PageTitle>Edit</PageTitle>

<div class="d-flex">
	<a class="btn btn-secondary" href="/profilepage/@UserId">Back</a>
	<h3 class="text-center mx-auto">Edit Profile</h3>
</div>

@if (profile is null)
{
    <p>Loading...</p>
}
else
{
    <EditForm Model="@profile" OnValidSubmit="EditUser" FormName="EditUserForm" style="width: 900px" class="mx-auto" Enhance="true">
        <input type="hidden" name="User.Id" value="@profile.Id"/>
        <div class="form-group row justify-content-center">
            <label for="firstName" class="col-sm-2 col-form-label text-right" style="width:154px"><strong>First name:</strong></label>
            <div class="col-sm-6">
                <InputText id="firstName" @bind-Value="profile.FirstName" class="form-control" />
            </div>
        </div>

        <div class="form-group row justify-content-center">
            <label for="lastName" class="col-sm-2 col-form-label text-right" style="width:154px"><strong>Last name:</strong></label>
            <div class="col-sm-6">
                <InputText id="lastName" @bind-Value="profile.LastName" class="form-control" />
            </div>
        </div>

        <div class="form-group row justify-content-center">
            <label for="email" class="col-sm-2 col-form-label text-right" style="width:154px"><strong>Email:</strong></label>
            <div class="col-sm-6">
                <InputText id="email" @bind-Value="profile.Email" class="form-control" />
            </div>
        </div>

        <div class="form-group row justify-content-center">
            <label for="phoneNumber" class="col-sm-2 col-form-label text-right" style="width:154px"><strong>Phone number:</strong></label>
            <div class="col-sm-6">
                <InputText id="phoneNumber" @bind-Value="profile.PhoneNumber" class="form-control" />
            </div>
        </div>
        <div class="form-group row justify-content-center">
            <label for="password" class="col-sm-2 col-form-label text-right" style="width:154px"><strong>Password:</strong></label>
            <div class="col-sm-6">
                <InputText id="password" type="password" @bind-Value="profile.Password" class="form-control" />
            </div>
        </div>

        <div class="d-flex justify-content-center mt-3">
            <button type="submit" class="btn btn-primary">Save</button>
        </div>
        <DataAnnotationsValidator />
        <ValidationSummary class="text-danger" />
    </EditForm>
}


@code {
    [Parameter]
    public int UserId { get; set; }

    [SupplyParameterFromForm]
    private User? profile { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if(profile is not null)
        {
            return;
        }

        profile = await UserRepository.GetUserFromIdAsync(UserId);
    }

    private async Task EditUser()
    {
        if(profile is not null)
        {
            profile.Id = UserId;
            await UserRepository.UpdateUserAsync(profile);
            Navigation.NavigateTo($"/profilepage/{UserId}");
        }
    }

}
