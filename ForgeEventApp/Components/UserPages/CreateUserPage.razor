@page "/createuserpage"
@using ForgeEventApp.Interfaces
@using ForgeEventApp.Models
@attribute [StreamRendering]

<h3>CreateUserPage</h3>
       <form @onsubmit="CreateUser"> 
      <div class="mb-3 row">
        <label for="inputFirstName" class="col-sm-2 col-form-label">First name</label>
        <div class="col-sm-10">
          <input type="text" @bind="user.FirstName" class="form-control" id="inputFirstName">
        </div>
        <label for="inputLastName" class="col-sm-2 col-form-label">Last name</label>
        <div class="col-sm-10">
            <input type="text" @bind="user.LastName" class=" form-control" id="inputLastName">
        </div>
        <label for="inputEmail" class="col-sm-2 col-form-label">Email</label>
        <div class="col-sm-10">
            <input type="email" @bind="user.Email" class=" form-control" id="inputEmail">
        </div>
        <label for="inputPhoneNumber" class="col-sm-2 col-form-label">Phonenumber</label>
        <div class="col-sm-10">
            <input type="tel" @bind="user.PhoneNumber" class=" form-control" id="inputPhoneNumber">
        </div>
        <label for="inputPassword" class="col-sm-2 col-form-label">Password</label>
        <div class="col-sm-10">
            <input type="password" @bind="user.Password" class=" form-control" id="inputPassword">
        </div>
        <div class="form-check">
            <input class="form-check-input" @bind="user.role" type=" radio" name="role" id="user" checked>
            <label class="form-check-label" for="user">
                User
            </label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="radio" name="role" id="admin">
            <label class="form-check-label" for="admin">
                Admin
            </label>
        </div>
        </div>
       <button type="submit" class="btn btn-primary">Submit</button>

      </form>

@code {
    private User user = new User();

    [Inject]
    private IUserRepository UserRepository { get; set; }

    private async Task CreateUser()
    {
        await UserRepository.CreateUserAsync(user);
    } 
}

